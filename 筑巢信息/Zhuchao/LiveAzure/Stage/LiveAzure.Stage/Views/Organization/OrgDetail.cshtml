@{
    Layout = null;
}
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
@using LiveAzure.Controls.LiveEditor
@ControlManager.LiveEditor()
@using LiveAzure.Controls.LiveRegionSelector
@ControlManager.RegionSelect()
@model LiveAzure.Models.Member.OrganizationBase
@using (@Ajax.BeginForm("SaveEditOrgDetail", "Organization", new AjaxOptions { OnSuccess = "OrgSaveSuccess" }, new { Id = "AddOrgDetailForm" }))
{
    @Html.HiddenFor(model => model.Gid)
    @Html.HiddenFor(model=>model.aParent)
    if (ViewBag.OrgType != "channel" && ViewBag.OrgType != "organization")
    {
    <span>
        @LiveAzure.Resource.Stage.UserController.organization:
    </span>
    <span>
        @ViewBag.ParentName
    </span>
    }
    <table class="DIY_table">
        @Html.ValidationSummary(false)
        @Html.HiddenFor(model => model.Gid)
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Code
            </th>
            @if (ViewBag.IsAdding)
            {
                <td>
                    @Html.EditorFor(model => model.Code)
                    @Html.ValidationMessageFor(model => model.Code)
                </td>
            }
            else
            { 
                <td>
                    @Html.DisplayFor(model=>model.Code)
                    @Html.HiddenFor(model=>model.Code)
                </td>
            }
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.ExCode
            </th>
            <td>
                @Html.EditorFor(model => model.ExCode)
                @Html.ValidationMessageFor(model => model.ExCode)
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Ostatus
            </th>
            <td>
                @Html.DropDownListFor(model => model.Ostatus, (List<SelectListItem>)ViewBag.organizationstatuslist)
            </td>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Otype
            </th>
            <td>
                 @Html.DropDownListFor(model => model.Otype, (List<SelectListItem>)ViewBag.organizationtypelist, new { disabled = true })
                 @Html.HiddenFor(model => model.Otype)
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.ExType
            </th>
            <td>
                @Html.DropDownListFor(model => model.ExType, (List<SelectListItem>)ViewBag.lExType)
            </td>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Terminal
            </th>
            <td>
                @Html.DropDownListFor(model => model.Terminal, (List<SelectListItem>)ViewBag.oIsTerminal)
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.FullName
            </th>
            <td>
                @Html.EditorFor(model => model.FullName, "Matter")
            </td>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.ShortName
            </th>
            <td>
                @Html.EditorFor(model => model.ShortName, "Matter")
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Location
            </th>
            <td>
                @Html.EditorFor(model => model.aLocation, "RegionSelect", new { ID = "orderRegion" })
            </td>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.FullAddress
            </th>
            <td>
                @Html.EditorFor(model => model.FullAddress)
                @Html.ValidationMessageFor(model => model.FullAddress)
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.PostCode
            </th>
            <td>
                @Html.EditorFor(model => model.PostCode)
                @Html.ValidationMessageFor(model => model.PostCode)
            </td>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Contact
            </th>
            <td>
                @Html.EditorFor(model => model.Contact)
                @Html.ValidationMessageFor(model => model.Contact)
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.WorkPhone
            </th>
            <td>
                @Html.EditorFor(model => model.WorkPhone)
                @Html.ValidationMessageFor(model => model.WorkPhone)
            </td>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.CellPhone
            </th>
            <td>
                @Html.EditorFor(model => model.CellPhone)
                @Html.ValidationMessageFor(model => model.CellPhone)
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.WorkFax
            </th>
            <td>
                @Html.EditorFor(model => model.WorkFax)
                @Html.ValidationMessageFor(model => model.WorkFax)
            </td>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Email
            </th>
            <td>
                @Html.EditorFor(model => model.Email)
                @Html.ValidationMessageFor(model => model.Email)
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.HomeUrl
            </th>
            <td>
                @Html.EditorFor(model => model.HomeUrl)
                @Html.ValidationMessageFor(model => model.HomeUrl)
            </td>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Sorting
            </th>
            <td>
                @Html.EditorFor(model => model.Sorting)
                @Html.ValidationMessageFor(model => model.Sorting)
            </td>
        </tr>
        <tr>
            <th>
                @LiveAzure.Resource.Model.Member.OrganizationBase.Brief
            </th>
            <td>
                @Html.EditorFor(model => model.Brief)
                @Html.ValidationMessageFor(model => model.Brief)
            </td>
            <th>
                @LiveAzure.Resource.Model.ModelBase.Remark
            </th>
            <td>
                @Html.EditorFor(model => model.Remark)
                @Html.ValidationMessageFor(model => model.Remark)
            </td>
        </tr>
    </table>
    <input type="button" value="@LiveAzure.Resource.Stage.OrganizationController.submit" onclick="SumbitAddOrgDetailForm();" />
    <input type="reset" value="@LiveAzure.Resource.Stage.OrganizationController.reset"  />
    <input type="button" value="@LiveAzure.Resource.Common.Back" onclick="BackFunction();"/>
}
    <script type="text/javascript" >
        function SumbitAddOrgDetailForm() {
            if ("@ViewBag.IsAdding" == "True") {
                $.post("/Organization/CodeCheck", { Code: $("#Code").val(), Otype: $("#Otype").val() }, function (CodeHasUsed) {
                    if (CodeHasUsed == "False")
                        $("#AddOrgDetailForm").submit();
                    else {
                        alert("@LiveAzure.Resource.Stage.OrganizationController.CodehasUsed");
                    }
                });
            }
            else {
                $("#AddOrgDetailForm").submit();
            }
        }
        function OrgSaveSuccess() {
            alert("@LiveAzure.Resource.Common.SaveSuccess");
            if ("@ViewBag.OrgType"=="channel"){
                $("#ChannelBlock").html("");
                $("#ListBlock").fadeIn("fast");
                $("#gridChannel").trigger('reloadGrid');
            }
            if ("@ViewBag.OrgType" == "supplier") {
                $("#SupplierAddorEditBlock").html("");
                $("#ListBlock").fadeIn("fast");
                $("#gridSupplier").trigger('reloadGrid');
            }
            if ("@ViewBag.OrgType" == "warehouse") {
                $("#WarehouseAddorEditBlock").html("");
                $("#ListBlock").fadeIn("fast");
                $("#gridWarehouse").trigger('reloadGrid');
            }
            if ("@ViewBag.OrgType" == "shipper") {
                $("#ShipperAddorEditBlock").html("");
                $("#ListBlock").fadeIn("fast");
                $("#gridShipping").trigger('reloadGrid');
            }
        }
        function BackFunction() {
            if ("@ViewBag.OrgType" == "organization") {
                window.location.href = "/Organization/Index";
            }
            if ("@ViewBag.OrgType" == "channel") {
                $("#ChannelBlock").html("");
                $("#ListBlock").fadeIn("fast");
            }
            if ("@ViewBag.OrgType" == "supplier") {
                $("#SupplierAddorEditBlock").html("");
                $("#ListBlock").fadeIn("fast");
            }
            if ("@ViewBag.OrgType" == "warehouse") {
                $("#WarehouseAddorEditBlock").html("");
                $("#ListBlock").fadeIn("fast");
            }
            if ("@ViewBag.OrgType" == "shipper") {
                $("#ShipperAddorEditBlock").html("");
                $("#ListBlock").fadeIn("fast");
            }
        }
    </script>

