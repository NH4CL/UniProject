@{
    Layout = null;
}
@using LiveAzure.Models.Product
@model LiveAzure.Models.Product.ProductInformation           
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<div id="productInfo">
    @using (Ajax.BeginForm("SaveProductInfo", "Product", new AjaxOptions { HttpMethod = "POST", OnSuccess = "productBaseInfoSave" }, new { id = "savePUform" }))
    {
    <div class="down_AddorEdit">
        <table class="DIY_table">
            @Html.HiddenFor(model => model.Gid)
            <tr>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.Code)
                </th>
                <td>
                    @if (ViewBag.bAddOrEdit == true)
                    {
                        @Html.EditorFor(model => model.Code)
                        @Html.ValidationMessageFor(model => model.Code)
                    }
                    else
                    { 
                        @Html.DisplayFor(model => model.Code)
                    }
                </td>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.Name)
                </th>
                <td>
                    @Html.EditorFor(model => model.Name, "Matter")
                </td>
            </tr>
            <tr>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.StdCatID)
                </th>
                <td>
                    @Html.DropDownListFor(model => model.StandardCategory.Name.Matter, (List<SelectListItem>)ViewBag.oStdList)
                </td>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.Block)
                </th>
                <td>
                    @Html.DropDownListFor(model => model.Block, (List<SelectListItem>)ViewBag.oBlockList)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.Mode)
                </th>
                <td>
                    @Html.DropDownListFor(model => model.Mode, (List<SelectListItem>)ViewBag.oModeList)
                </td>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.MinQuantity)
                </th>
                <td>
                    @Html.EditorFor(model => model.MinQuantity)
                    @Html.ValidationMessageFor(model => model.MinQuantity)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.ProductionCycle)
                </th>
                <td>
                    @Html.EditorFor(model => model.ProductionCycle)
                    @Html.ValidationMessageFor(model => model.ProductionCycle)
                    @Html.Label(LiveAzure.Resource.Stage.ProductController.Day)
                </td>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.GuaranteeDays)
                </th>
                <td>
                    @Html.EditorFor(model => model.GuaranteeDays)
                    @Html.ValidationMessageFor(model => model.GuaranteeDays)
                    @Html.Label(LiveAzure.Resource.Stage.ProductController.Day)
                </td>
            </tr>
            <tr>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.Keywords)
                </th>
                <td>
                    @Html.EditorFor(model => model.Keywords)
                    @Html.ValidationMessageFor(model => model.Keywords)
                </td>
                <th>
                    @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.Picture)
                </th>
                <td>
                    @Html.EditorFor(model => model.Picture)
                    @Html.ValidationMessageFor(model => model.Picture)
                </td>
            </tr>
            @*<div>
            @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.SaleType)
            @Html.DropDownListFor(model => model.SaleType, (List<SelectListItem>)ViewBag.oSaleTypeList)
        </div>*@
            <tr>                
                <th>
                    @Html.Label(LiveAzure.Resource.Model.ModelBase.Remark)
                </th>
                <td>
                    @Html.TextAreaFor(model => model.Remark)
                    @Html.ValidationMessageFor(model => model.Remark)
                </td>
            </tr>
        </table>
        <div>
            <input type="submit" value="@LiveAzure.Resource.Common.Submit" />
            <input type="reset" value="@LiveAzure.Resource.Common.Reset" />
        </div>
        
     </div>   
    }
</div>
<script type="text/javascript">

    function productBaseInfoSave(data) {
        if (data == "success") {
            var successConfirm = "@Html.Raw(LiveAzure.Resource.Stage.ProductController.SaveOK)";
            alert(successConfirm);
        }
        else {
            var failureCode = "@Html.Raw(LiveAzure.Resource.Stage.ProductController.PuCodeExist)";
            alert(failureCode);
        }
    }

</script>
