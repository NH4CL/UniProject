@{
    Layout = null;
}
@using MVC.Controls.Grid
@using MVC.Controls
@using LiveAzure.Models.Product
<script type="text/javascript">
    var UnitPricePanel = new OpenPanel();
    UnitPricePanel.bLoading = true;
    UnitPricePanel.width = 500;
    UnitPricePanel.height = 600;
    UnitPricePanel.title = "@LiveAzure.Resource.Stage.ProductController.ProductOnsaleShipping";
    UnitPricePanel.closeurl = "@Url.Content("~/Content/themes/base/images/close.gif")";
    function addOnsaleShipping() {
        UnitPricePanel.OpenPanel();
        $.ajax({
            type: "POST",
            url: "/Product/ProductOnsaleShippingAddOrEdit",
            data: { bAddorEdit: 'true' },
            success: function (html) {
            UnitPricePanel.EditPageHtml(html);
            }
        });
    }

    function editOnsaleShipping() {
        UnitPricePanel.OpenPanel();
        var selectGid = $("#ProductShippingGrid").jqGrid("getGridParam", "selrow");
        if (selectGid == null) {
            var strEditTip = "@Html.Raw(LiveAzure.Resource.Stage.ProductController.EditTips)";
            alert(strEditTip);
        }
        else {
            $.ajax({
                type: "POST",
                url: "/Product/ProductOnsaleShippingAddOrEdit",
                data: { bAddorEdit: 'false', gid: selectGid },
                success: function (html) {
                UnitPricePanel.EditPageHtml(html);
                }
            });
        }
    }

    function deleteOnsaleShipping() {
        var selectGid = $("#ProductShippingGrid").jqGrid("getGridParam", "selrow");
        if (selectGid == null) {
            var strDeleteTip = "@Html.Raw(LiveAzure.Resource.Stage.ProductController.DeleteTips)";
            alert(strDeleteTip);
        }
        else {
            var strConfirm = "@Html.Raw(LiveAzure.Resource.Stage.ProductController.DeleteConfirm)";
            var strDeleteSuccess = "@Html.Raw(LiveAzure.Resource.Stage.ProductController.DeleteSuccess)";
            var deleteInfo = $("#ProductShippingGrid").jqGrid("getRowData", selectGid);
            var truthBeTold = window.confirm(strConfirm + " " + deleteInfo["FullName.Matter"] + "?");
            if (truthBeTold) {
                $.ajax({
                    type: "POST",
                    url: "/Product/DeleteOnsaleShipping",
                    data: { gid: selectGid },
                    success: function () {
                        alert(strDeleteSuccess);
                        $("#ProductShippingGrid").trigger('reloadGrid');
                    }
                });
            }
        }
    }

    function setOnsaleShipArea() {
        UnitPricePanel.OpenPanel();
        var selectGid = $("#ProductShippingGrid").jqGrid("getGridParam", "selrow");
        if (selectGid == null) {
            var strEditTip = "@Html.Raw(LiveAzure.Resource.Stage.ProductController.SetShipAreaTips)";
            alert(strEditTip);
        }
        else {
            $.ajax({
                type: "POST",
                url: "/Product/ProductOnshipArea",
                data: { gid: selectGid },
                success: function (html) {
                UnitPricePanel.EditPageHtml(html);
                }
            });
        }
    }

</script>
<div>
    <span>@LiveAzure.Resource.Model.Product.ProductInformation.Code :</span> <span style="font-weight: bold">@ViewBag.PaymentPUCode</span>
    <span>@LiveAzure.Resource.Model.Product.ProductInformation.Name :</span> <span style="font-weight: bold">@ViewBag.PaymentPUName</span>
</div>
<div>
    @Html.Grid(
                new GridControl()
                .SetName("ProductShippingGrid")
                .SetPageSize(10)
                .SetIsAutoSize(true)
                .SetListUrl("/Product/ListOnsaleShipping")
                .SetEditUrl("")
                .SetHeight("'100%'")
                .SetWidth("300")
                .SetColumns<LiveAzure.Models.Product.ProductOnShipping>(cs =>
                {
                    cs.Add(x => x.Gid).SetAsPrimaryKey().SetHidden(true);
                    cs.Add(x => x.Shipper.FullName.Matter).SetCaption(LiveAzure.Resource.Model.Product.ProductOnShipping.Shipping);
                    cs.Add(x => x.ShipWeight).SetCaption(LiveAzure.Resource.Model.Product.ProductOnShipping.ShipWeight);
                    cs.Add(x => x.SolutionName).SetCaption(LiveAzure.Resource.Model.Product.ProductOnShipping.Solution);
                    cs.Add(x => x.Condition).SetCaption(LiveAzure.Resource.Model.Product.ProductOnShipping.Condition);
                    cs.Add(x => x.Discount).SetCaption(LiveAzure.Resource.Model.Product.ProductOnShipping.Discount);
                    cs.Add(x => x.SupportCod).SetCaption(LiveAzure.Resource.Model.Product.ProductOnShipping.SupportCod);
                    cs.Add(x => x.Remark).SetCaption(LiveAzure.Resource.Model.ModelBase.Remark);
                })

    )
    <div>
        <input type="button" name="addOnsaleShipping" value="@LiveAzure.Resource.Common.Add" onclick="addOnsaleShipping();" />
        <input type="button" name="editOnsaleShipping" value="@LiveAzure.Resource.Common.Edit" onclick="editOnsaleShipping();" />
        <input type="button" name="deleteOnsaleShipping" value="@LiveAzure.Resource.Common.Delete" onclick="deleteOnsaleShipping();" />
        <input type="button" name="setShipArea" value="@LiveAzure.Resource.Stage.ProductController.SetShipArea" onclick="setOnsaleShipArea();" />
    </div>
</div>
