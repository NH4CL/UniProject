@{
    ViewBag.Title = "ProductOnSaleBaseInfo";
    Layout = null;
}
@using LiveAzure.Controls.LiveEditor
@model LiveAzure.Models.Product.ProductOnSale
<script src="@Url.Content("~/Scripts/jquery.validate.js")" type="text/javascript"></script>
<script src="@Url.Content("~/Scripts/jquery.validate.unobtrusive.js")" type="text/javascript"></script>
<script type="text/javascript">
    $("#Product_Code").attr("disabled", true);
    /*------------定义弹出窗口-----------*/
    var choosePuPanel = new OpenPanel();//初始化窗口实例
    choosePuPanel.width = 650;
    choosePuPanel.height = 450;
    choosePuPanel.title = "@Html.Raw(LiveAzure.Resource.Stage.ProductController.ChoosePU)";
    choosePuPanel.closeurl = "@Html.Raw(Url.Content("~/Content/themes/base/images/close.gif"))";
    function choosePu() {
        choosePuPanel.OpenPanel();
        $.post("/Product/ChoosePu", {}, function (html) {
           choosePuPanel.EditPageHtml(html);
        });
    }

    function PuOnSaleSuccess(){
        $("#productOnSaleGrid").trigger("reloadGrid");
        alert("@Html.Raw(@LiveAzure.Resource.Common.SaveSuccess)");
        GridSwich();
        $("#tab_skuonsale").click();
        }
</script>
<div>
    <span>@LiveAzure.Resource.Model.Product.ProductInformation.Code :</span> <span style="font-weight: bold">@ViewBag.PUCode</span>
    <span>@LiveAzure.Resource.Model.Product.ProductInformation.Name :</span> <span style="font-weight: bold">@ViewBag.PUName</span>
</div>
@using (Ajax.BeginForm("ProductOnSaleUpDate", "Product", new AjaxOptions { HttpMethod = "POST", OnSuccess = "PuOnSaleSuccess" }))
{
    <fieldset style="width: 97%;">
        <legend>@LiveAzure.Resource.Stage.ProductController.OnSaleBaseInfo</legend>
        <div class="down_AddorEdit">
            <table class="DIY_table">
                @Html.HiddenFor(model => model.Gid)
                @Html.HiddenFor(model => model.Product.Gid)
                <tr>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductInformation.Code)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.Product.Code)
                        <input id="choosePU" type="button" value="@LiveAzure.Resource.Stage.ProductController.ChoosePU" onclick="choosePu();" />
                    </td>
                @if (ViewBag.isEdit)
                {
                        <th>
                            @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Channel)
                        </th>
                        <td>
                            @ViewBag.ChlName
                        </td>
                }
                else
                {
                        <th>
                            @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Channel)
                        </th>
                        <td>
                            @Html.DropDownListFor(model => model.ChlID, (List<SelectListItem>)ViewBag.orgChannel)
                        </td>
                }
                </tr>
                <tr>
                @if (ViewBag.isEdit)
                {
                        <th>
                            @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Code)
                        </th>
                        <td>
                            @Html.DisplayFor(model => model.Code)
                        </td>
                }
                else
                {
                        <th>
                            @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Code)
                        </th>
                        <td>
                            @Html.EditorFor(model => model.Code)
                            @Html.ValidationMessageFor(model => model.Code)
                        </td>
                }
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Ostatus)
                    </th>
                    <td>
                        @Html.DropDownListFor(model => model.Ostatus, (List<SelectListItem>)ViewBag.PuStatus)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Name)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.Name, "Matter")
                    </td>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Mode)
                    </th>
                    <td>
                        @Html.DropDownListFor(model => model.Mode, (List<SelectListItem>)ViewBag.oMode)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.CanSplit)
                    </th>
                    <td>
                        @Html.DropDownListFor(model => model.CanSplit, (List<SelectListItem>)ViewBag.oCanSplit)
                    </td>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Validity)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.Validity)
                        @Html.ValidationMessageFor(model => model.Validity)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.DeliveryDays)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.DeliveryDays)
                        @Html.ValidationMessageFor(model => model.DeliveryDays)
                    </td>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.SortingNew)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.SortingNew)
                        @Html.ValidationMessageFor(model => model.SortingNew)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.SortingClick)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.SortingClick)
                        @Html.ValidationMessageFor(model => model.SortingClick)
                    </td>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.SortingHot)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.SortingHot)
                        @Html.ValidationMessageFor(model => model.SortingHot)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.SortingPush)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.SortingPush)
                        @Html.ValidationMessageFor(model => model.SortingPush)
                    </td>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.Picture)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.Picture)
                        @Html.ValidationMessageFor(model => model.Picture)
                    </td>
                </tr>
                <tr>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.Product.ProductOnSale.VideoUrl)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.VideoUrl)
                        @Html.ValidationMessageFor(model => model.VideoUrl)
                    </td>
                    <th>
                        @Html.Label(LiveAzure.Resource.Model.ModelBase.Remark)
                    </th>
                    <td>
                        @Html.EditorFor(model => model.Remark)
                        @Html.ValidationMessageFor(model => model.Remark)
                    </td>
                </tr>
            </table>
            @*<div>
                @Html.TextAreaFor(model => model.Matter.CLOB, new { id = "detailedDescriptionEditor" })
                @Html.LiveEditor(new LiveEditor().SetName("detailedDescriptionEditor").SetSkin(LiveEditorSkin.Office2003))
            </div>*@
           @* @Html.EditorFor(model => model.Matter, "LargeMatter", new {ID="PUOnSaleDescription", Editor = new LiveEditor().SetSkin(LiveEditorSkin.Office2003) })*@
            <div>
                <input type="submit" value="@LiveAzure.Resource.Common.Submit" />
                <input type="reset" value="@LiveAzure.Resource.Common.Reset" />
            </div>
        </div>
    </fieldset>
}
